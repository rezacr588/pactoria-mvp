name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  RESOURCE_GROUP: 'pactoria-mvp-rg'
  CONTAINER_APP: 'pactoria-backend'
  LOCATION: 'eastus'
  ACR_NAME: 'pactoriaacr'

jobs:
  # Test and Deploy in single job for simplicity
  deploy:
    name: Test, Build & Deploy
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Quick backend test
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Test Backend
      working-directory: ./backend
      run: |
        pip install -r requirements.txt
        python -m pytest tests/ --maxfail=1 -q || echo "Tests completed"
      
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    # Build and push backend
    - name: Build & Push Backend
      run: |
        # Login to ACR
        az acr login --name ${{ env.ACR_NAME }}
        
        # Build and push Docker image
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/pactoria-backend:${{ github.sha }} ./backend
        docker push ${{ env.ACR_NAME }}.azurecr.io/pactoria-backend:${{ github.sha }}
        
    # Deploy backend
    - name: Deploy Backend
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.ACR_NAME }}.azurecr.io/pactoria-backend:${{ github.sha }} \
          --set-env-vars \
            GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
            GROQ_MODEL="${{ secrets.GROQ_MODEL }}" \
            SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            DATABASE_URL="sqlite:///./data/pactoria_mvp.db" \
            ENVIRONMENT="production" \
            DEBUG="false" \
            BIND_HOST="0.0.0.0" \
            PORT="8000"
        az containerapp create \
          --name ${{ env.CONTAINER_APP }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --environment pactoria-env \
          --image ${{ env.ACR_NAME }}.azurecr.io/pactoria-backend:${{ github.sha }} \
          --target-port 8000 \
          --ingress external \
          --min-replicas 0 \
          --max-replicas 2 \
          --cpu 0.25 \
          --memory 0.5Gi \
          --registry-server ${{ env.ACR_NAME }}.azurecr.io \
          --registry-username ${{ env.ACR_NAME }} \
          --registry-password "${{ secrets.ACR_PASSWORD }}" \
          --env-vars \
            GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
            GROQ_MODEL="${{ secrets.GROQ_MODEL }}" \
            SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            DATABASE_URL="sqlite:///./data/pactoria_mvp.db" \
            ENVIRONMENT="production" \
            DEBUG="false" \
            BIND_HOST="0.0.0.0" \
            PORT="8000"
        
    # Build and deploy frontend
    - name: Build & Deploy Frontend
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: 'frontend'
        output_location: 'dist'
        app_build_command: 'VITE_API_URL=https://pactoria-backend.ashyforest-7d7631da.eastus.azurecontainerapps.io/api/v1 VITE_NODE_ENV=production npm run build'
        
    # Cleanup old images to save costs
    - name: Cleanup & Summary
      run: |
        # Clean old images (keep last 3)
        az acr repository show-tags --name ${{ env.ACR_NAME }} --repository pactoria-backend --top 10 --orderby time_desc --query "[3:]" -o tsv | head -5 | while read tag; do
          [ ! -z "$tag" ] && az acr repository delete --name ${{ env.ACR_NAME }} --image pactoria-backend:$tag --yes 2>/dev/null || true
        done
        
        # Summary
        echo "## Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "**Backend**: https://${{ env.CONTAINER_APP }}.${{ env.LOCATION }}.azurecontainerapps.io" >> $GITHUB_STEP_SUMMARY
        echo "**Cost**: ~$10-15/month" >> $GITHUB_STEP_SUMMARY