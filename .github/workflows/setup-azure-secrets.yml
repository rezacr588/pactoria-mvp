name: Setup Azure Container Apps Secrets

on:
  workflow_dispatch:
    inputs:
      secret_key:
        description: 'Application Secret Key'
        required: true
        type: string
      jwt_secret_key:
        description: 'JWT Secret Key'
        required: true
        type: string
      groq_api_key:
        description: 'Groq API Key'
        required: true
        type: string
      database_url:
        description: 'Database Connection String'
        required: true
        type: string
      storage_account_name:
        description: 'Azure Storage Account Name'
        required: false
        type: string
      storage_account_key:
        description: 'Azure Storage Account Key'
        required: false
        type: string

env:
  CONTAINER_APP_NAME: 'pactoria-backend'
  RESOURCE_GROUP_NAME: 'pactoria-rg'

jobs:
  setup-secrets:
    runs-on: ubuntu-latest
    name: Configure Azure Container Apps Secrets
    environment: production
    
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Container Apps secrets
      run: |
        echo "üîê Setting up Azure Container Apps secrets..."
        
        # Create or update secrets in Container Apps
        az containerapp secret set \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --secrets \
            secret-key="${{ github.event.inputs.secret_key }}" \
            jwt-secret-key="${{ github.event.inputs.jwt_secret_key }}" \
            groq-api-key="${{ github.event.inputs.groq_api_key }}" \
            database-url="${{ github.event.inputs.database_url }}"
        
        # Add storage secrets if provided
        if [ -n "${{ github.event.inputs.storage_account_name }}" ] && [ -n "${{ github.event.inputs.storage_account_key }}" ]; then
          az containerapp secret set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --secrets \
              storage-account-name="${{ github.event.inputs.storage_account_name }}" \
              storage-account-key="${{ github.event.inputs.storage_account_key }}"
        fi
        
        echo "‚úÖ Secrets configured successfully!"
        
    - name: Verify secret configuration
      run: |
        echo "üîç Verifying secret configuration..."
        
        # List secrets (names only, not values)
        az containerapp secret list \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --query '[].name' -o table
        
        echo "‚úÖ Secret verification complete!"

    - name: Restart Container App
      run: |
        echo "üîÑ Restarting Container App to apply new secrets..."
        
        # Create a new revision to apply the secrets
        az containerapp revision restart \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }}
        
        echo "‚úÖ Container App restarted with new secrets!"