name: Setup Branch Protection

on:
  workflow_dispatch:
    inputs:
      setup_protection:
        description: 'Setup branch protection rules'
        required: true
        default: true
        type: boolean

jobs:
  setup-branch-protection:
    name: Configure Branch Protection Rules
    runs-on: ubuntu-latest
    if: ${{ inputs.setup_protection }}
    
    steps:
    - name: Setup Branch Protection
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          console.log('🛡️ Setting up branch protection rules...');
          
          // Main branch protection
          try {
            await github.rest.repos.updateBranchProtection({
              owner: owner,
              repo: repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: [
                  'security-scan',
                  'test / Test & Validate Backend',
                  'test / Test & Validate Frontend',
                  'build / Build & Push Container Image'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 1,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false,
                require_last_push_approval: false
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false
            });
            console.log('✅ Main branch protection configured');
          } catch (error) {
            console.log('❌ Failed to configure main branch protection:', error.message);
          }
          
          // Develop branch protection (less restrictive)
          try {
            await github.rest.repos.updateBranchProtection({
              owner: owner,
              repo: repo, 
              branch: 'develop',
              required_status_checks: {
                strict: false,
                contexts: [
                  'security-scan'
                ]
              },
              enforce_admins: false,
              required_pull_request_reviews: {
                required_approving_review_count: 0,
                dismiss_stale_reviews: false,
                require_code_owner_reviews: false
              },
              restrictions: null,
              allow_force_pushes: false,
              allow_deletions: false
            });
            console.log('✅ Develop branch protection configured');
          } catch (error) {
            console.log('❌ Failed to configure develop branch protection:', error.message);
            // Develop branch might not exist yet
          }

    - name: Create Deployment Environments
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          console.log('🌍 Setting up deployment environments...');
          
          const environments = [
            {
              name: 'development',
              reviewers: [],
              deployment_branch_policy: {
                protected_branches: false,
                custom_branch_policies: true
              }
            },
            {
              name: 'staging', 
              reviewers: [],
              deployment_branch_policy: {
                protected_branches: true,
                custom_branch_policies: false
              }
            },
            {
              name: 'production',
              reviewers: [
                // Add reviewer user IDs here if needed
              ],
              deployment_branch_policy: {
                protected_branches: true,
                custom_branch_policies: false
              }
            }
          ];
          
          for (const env of environments) {
            try {
              // Create environment
              await github.rest.repos.createOrUpdateEnvironment({
                owner: owner,
                repo: repo,
                environment_name: env.name,
                deployment_branch_policy: env.deployment_branch_policy
              });
              
              console.log(`✅ Environment '${env.name}' configured`);
            } catch (error) {
              console.log(`❌ Failed to configure environment '${env.name}':`, error.message);
            }
          }

    - name: Setup Repository Rules Summary
      run: |
        echo "## 🛡️ Branch Protection Setup Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Main Branch Protection:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Require status checks to pass" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Require pull request reviews (1 reviewer)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dismiss stale reviews when new commits are pushed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Prevent force pushes" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Prevent deletions" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Environments:" >> $GITHUB_STEP_SUMMARY
        echo "- 🟢 **Development**: Auto-deploy on develop branch" >> $GITHUB_STEP_SUMMARY
        echo "- 🟡 **Staging**: Deploy on main branch PRs" >> $GITHUB_STEP_SUMMARY
        echo "- 🔴 **Production**: Deploy on main branch pushes (with reviews)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Required Status Checks:" >> $GITHUB_STEP_SUMMARY
        echo "- Security scanning" >> $GITHUB_STEP_SUMMARY
        echo "- Backend tests" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend tests" >> $GITHUB_STEP_SUMMARY
        echo "- Container build" >> $GITHUB_STEP_SUMMARY