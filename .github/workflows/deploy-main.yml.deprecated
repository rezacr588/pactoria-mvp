name: Simplified Pactoria Deployment (DEPRECATED - Use ci-cd-*.yml workflows)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY_NAME: 'pactoriaacr'
  CONTAINER_APP_NAME: 'pactoria-backend'
  STATIC_WEB_APP_NAME: 'pactoria-frontend'
  RESOURCE_GROUP_NAME: 'pactoria-rg'
  AZURE_LOCATION: 'eastus'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Application
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Backend Deployment
    - name: Deploy Backend
      run: |
        echo "üöÄ Deploying Backend..."
        
        # Login to Container Registry
        az acr login --name ${{ env.REGISTRY_NAME }}
        
        # Build and push image
        cd backend
        IMAGE_TAG="${{ github.sha }}"
        FULL_IMAGE_NAME="${{ env.REGISTRY_NAME }}.azurecr.io/pactoria-backend:${IMAGE_TAG}"
        
        docker build -t $FULL_IMAGE_NAME .
        docker push $FULL_IMAGE_NAME
        
        # Update Container App with environment variables
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --image $FULL_IMAGE_NAME \
          --min-replicas 0 \
          --max-replicas 2 \
          --cpu 0.25 \
          --memory 0.5Gi \
          --set-env-vars \
            GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
            SECRET_KEY=${{ secrets.SECRET_KEY }} \
            ENVIRONMENT=production \
          --revision-suffix $(date +%s)

    # Frontend Deployment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build and Deploy Frontend
      run: |
        echo "üöÄ Building and deploying Frontend..."
        cd frontend
        npm ci
        npm run build
      env:
        VITE_API_URL: https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/api
        VITE_APP_NAME: 'Pactoria MVP'
        VITE_ENVIRONMENT: 'production'

    - name: Deploy to Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        output_location: "dist"
        skip_app_build: true

    # Verify Deployment
    - name: Verify Deployment
      run: |
        echo "‚è≥ Waiting for deployment to complete..."
        sleep 30
        
        # Test Backend
        BACKEND_URL="https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io"
        echo "Testing backend: $BACKEND_URL/health"
        if curl -f "$BACKEND_URL/health"; then
          echo "‚úÖ Backend is healthy"
        else
          echo "‚ùå Backend health check failed"
          exit 1
        fi
        
        # Test Frontend
        FRONTEND_URL="https://${{ env.STATIC_WEB_APP_NAME }}.azurestaticapps.net"
        echo "Testing frontend: $FRONTEND_URL"
        if curl -f -s "$FRONTEND_URL" > /dev/null; then
          echo "‚úÖ Frontend is accessible"
        else
          echo "‚ö†Ô∏è Frontend may still be deploying"
        fi
        
        echo ""
        echo "üéâ Deployment Complete!"
        echo "Frontend: $FRONTEND_URL"
        echo "Backend: $BACKEND_URL/api"