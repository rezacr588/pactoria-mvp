name: Validate Secrets Configuration

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 6 AM UTC
    - cron: '0 6 * * 0'

env:
  RESOURCE_GROUP_NAME: 'pactoria-rg'
  CONTAINER_APP_NAME: 'pactoria-backend'
  STATIC_WEB_APP_NAME: 'pactoria-frontend'

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    name: Validate Required Secrets
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check GitHub Secrets
      run: |
        echo "# 🔐 Secrets Validation Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Required secrets checklist
        REQUIRED_SECRETS=(
          "AZURE_CREDENTIALS"
          "AZURE_STATIC_WEB_APPS_API_TOKEN"
          "STATIC_WEB_APP_URL"
        )
        
        OPTIONAL_SECRETS=(
          "GROQ_API_KEY"
          "VITE_API_URL"
          "JWT_SECRET_KEY"
        )
        
        echo "## Required Secrets" >> $GITHUB_STEP_SUMMARY
        for secret in "${REQUIRED_SECRETS[@]}"; do
          case $secret in
            "AZURE_CREDENTIALS")
              if [ -n "${{ secrets.AZURE_CREDENTIALS }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ $secret - Missing" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
            "AZURE_STATIC_WEB_APPS_API_TOKEN")
              if [ -n "${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ $secret - Missing" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
            "STATIC_WEB_APP_URL")
              if [ -n "${{ secrets.STATIC_WEB_APP_URL }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "⚠️ $secret - Missing (will use default)" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
          esac
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Optional Secrets" >> $GITHUB_STEP_SUMMARY
        for secret in "${OPTIONAL_SECRETS[@]}"; do
          case $secret in
            "GROQ_API_KEY")
              if [ -n "${{ secrets.GROQ_API_KEY }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "⚠️ $secret - Missing (AI features will be limited)" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
            "VITE_API_URL")
              if [ -n "${{ secrets.VITE_API_URL }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "ℹ️ $secret - Using default" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
            "JWT_SECRET_KEY")
              if [ -n "${{ secrets.JWT_SECRET_KEY }}" ]; then
                echo "✅ $secret - Configured" >> $GITHUB_STEP_SUMMARY
              else
                echo "⚠️ $secret - Missing (using environment default)" >> $GITHUB_STEP_SUMMARY
              fi
              ;;
          esac
        done

    - name: Azure Login
      if: vars.AZURE_CREDENTIALS_CONFIGURED == 'true' || github.event_name == 'workflow_dispatch'
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      continue-on-error: true

    - name: Validate Azure Resources
      if: success()
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Azure Resources Status" >> $GITHUB_STEP_SUMMARY
      continue-on-error: true

    - name: Check Azure Resources
      if: success()
      run: |
        # Check Resource Group
        if az group show --name ${{ env.RESOURCE_GROUP_NAME }} > /dev/null 2>&1; then
          echo "✅ Resource Group: ${{ env.RESOURCE_GROUP_NAME }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Resource Group: ${{ env.RESOURCE_GROUP_NAME }} - Not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check Container Registry
        if az acr show --name pactoriaacr > /dev/null 2>&1; then
          echo "✅ Container Registry: pactoriaacr" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Container Registry: pactoriaacr - Not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check Container App
        if az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} > /dev/null 2>&1; then
          echo "✅ Container App: ${{ env.CONTAINER_APP_NAME }}" >> $GITHUB_STEP_SUMMARY
          
          # Get app URL
          APP_URL=$(az containerapp show \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --query "properties.configuration.ingress.fqdn" -o tsv 2>/dev/null || echo "")
          
          if [ -n "$APP_URL" ]; then
            echo "  - URL: https://$APP_URL" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ Container App: ${{ env.CONTAINER_APP_NAME }} - Not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check Static Web App
        if az staticwebapp show --name ${{ env.STATIC_WEB_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} > /dev/null 2>&1; then
          echo "✅ Static Web App: ${{ env.STATIC_WEB_APP_NAME }}" >> $GITHUB_STEP_SUMMARY
          
          # Get default hostname
          HOSTNAME=$(az staticwebapp show \
            --name ${{ env.STATIC_WEB_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --query "defaultHostname" -o tsv 2>/dev/null || echo "")
          
          if [ -n "$HOSTNAME" ]; then
            echo "  - URL: https://$HOSTNAME" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ Static Web App: ${{ env.STATIC_WEB_APP_NAME }} - Not found" >> $GITHUB_STEP_SUMMARY
        fi
      continue-on-error: true

    - name: Generate Setup Instructions
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔧 Setup Instructions" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Missing Required Secrets?" >> $GITHUB_STEP_SUMMARY
        echo "1. Go to Settings → Secrets and Variables → Actions" >> $GITHUB_STEP_SUMMARY
        echo "2. Add the missing secrets listed above" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### AZURE_CREDENTIALS Setup:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# Create service principal" >> $GITHUB_STEP_SUMMARY
        echo "az ad sp create-for-rbac --name pactoria-github-actions --role contributor --scopes /subscriptions/{SUBSCRIPTION_ID}/resourceGroups/${{ env.RESOURCE_GROUP_NAME }} --sdk-auth" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### AZURE_STATIC_WEB_APPS_API_TOKEN Setup:" >> $GITHUB_STEP_SUMMARY
        echo "1. Go to your Static Web App in Azure Portal" >> $GITHUB_STEP_SUMMARY
        echo "2. Navigate to Overview → Manage deployment token" >> $GITHUB_STEP_SUMMARY
        echo "3. Copy the deployment token and add as a secret" >> $GITHUB_STEP_SUMMARY